#include <stdio.h>
#include <stdlib.h>

int divideAndConquer(int arr[], int size, int num, int position);

int main(){
	int n = 0, m = 0;
	int arr[200000];
	FILE *fp = fopen("rosalind_bins.txt", "r");
	if (fp == NULL)
		return -1;
	fscanf(fp, "%d", &n);
	fscanf(fp, "%d", &m);
	for (int i = 0; i < n+m; i++){
		fscanf(fp, "%d ", &arr[i]);
	}
	
	fclose(fp);
	FILE *ofp = fopen("binarysearchoutput.txt", "w");

	//printf("n: %d, m: %d\n", n, m);
	
	for (int i = n; i < m+n; i++){
		//printf("%d ", arr[i]);
		int p = divideAndConquer(arr, n-1, arr[i], (n-1)/2);
		if (p != -1)
			p = p + 1;
		fprintf(ofp, "%d ", p);
	
	}
	fclose(ofp);
	printf("\n");
	

	return 0;
}

int divideAndConquer(int arr[], int size, int num, int position){
	if (size == 0)
		return -1;
	//printf("size: %d, position: %d, num: %d, arrElement: %d\n", size, position, num, arr[position]);
	// position is the position of the element array for num to compare to
	if (num == arr[position])
		return position;
	if (num < arr[position])
		return divideAndConquer(arr, size / 2, num, position - (size / 2));
	if (num > arr[position])
		return divideAndConquer(arr, size / 2, num, position + (size / 2));

}